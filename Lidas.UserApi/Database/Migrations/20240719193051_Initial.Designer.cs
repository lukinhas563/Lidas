// <auto-generated />
using System;
using Lidas.UserApi.Persist;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Lidas.UserApi.Database.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240719193051_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Lidas.UserApi.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("322d8786-4eee-46f3-93cc-02a9509b4855"),
                            CreatedAt = new DateTime(2024, 7, 19, 19, 30, 50, 734, DateTimeKind.Utc).AddTicks(8660),
                            IsDeleted = false,
                            Name = "Basic",
                            UpdatedAt = new DateTime(2024, 7, 19, 19, 30, 50, 734, DateTimeKind.Utc).AddTicks(8662)
                        },
                        new
                        {
                            Id = new Guid("b59174c3-2db4-4cc4-8973-a36f66e5ef14"),
                            CreatedAt = new DateTime(2024, 7, 19, 19, 30, 50, 734, DateTimeKind.Utc).AddTicks(8702),
                            IsDeleted = false,
                            Name = "Premium",
                            UpdatedAt = new DateTime(2024, 7, 19, 19, 30, 50, 734, DateTimeKind.Utc).AddTicks(8702)
                        },
                        new
                        {
                            Id = new Guid("ef3b0b62-440d-49e2-9b61-2f941f5612c2"),
                            CreatedAt = new DateTime(2024, 7, 19, 19, 30, 50, 734, DateTimeKind.Utc).AddTicks(8722),
                            IsDeleted = false,
                            Name = "Admin",
                            UpdatedAt = new DateTime(2024, 7, 19, 19, 30, 50, 734, DateTimeKind.Utc).AddTicks(8722)
                        });
                });

            modelBuilder.Entity("Lidas.UserApi.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("RoleId");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Lidas.UserApi.Entities.User", b =>
                {
                    b.HasOne("Lidas.UserApi.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Lidas.UserApi.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
